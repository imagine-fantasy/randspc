public class SpendControlRuleDeserializer extends JsonDeserializer<SpendControlRule> {
    @Override
    public SpendControlRule deserialize(JsonParser p, DeserializationContext ctxt) throws IOException {
        ObjectMapper mapper = (ObjectMapper) p.getCodec();
        JsonNode node = mapper.readTree(p);
        
        // Navigate to velocityControls and validate
        JsonNode velocityControls = node.path("ruleRestriction").path("velocityControls");
        if (velocityControls.isArray()) {
            for (JsonNode control : velocityControls) {
                JsonNode countLimit = control.get("cumulativeTransactionCountLimit");
                if (countLimit != null && countLimit.isNumber() && 
                    countLimit.asText().contains(".")) {
                    throw new JsonParseException(p, 
                        "cumulativeTransactionCountLimit must be a whole number, found: " + 
                        countLimit.asText());
                }
            }
        }
        
        return mapper.treeToValue(node, SpendControlRule.class);
    }
}
